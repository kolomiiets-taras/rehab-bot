services:
  db:
    image: postgres:15
    container_name: spina_postgres
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spina_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: .
    container_name: spina_api
    restart: always
    environment:
      - SERVICE_TYPE=api
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs  # Додано вольюм для логів
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spina_network

  bot:
    build: .
    container_name: spina_bot
    restart: always
    environment:
      - SERVICE_TYPE=bot
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spina_network

  nginx:
    image: nginx:latest
    container_name: spina_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - api
    networks:
      - spina_network

  certbot:
    image: certbot/certbot
    container_name: spina_certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:

networks:
  spina_network:
    driver: bridge