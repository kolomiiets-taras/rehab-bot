services:
  init-logs:
    image: alpine:latest
    command: >
      sh -c "
        mkdir -p /logs/bot /logs/site /logs/scripts &&
        chmod -R 777 /logs &&
        echo 'Created:' &&
        ls -la /logs/
      "
    volumes:
      - ./logs:/logs

  db:
    container_name: spina_postgres
    image: postgres:17-alpine
    environment:
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build: .
    container_name: spina_api
    command: python -m backend
    restart: always
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./media:/app/backend/static/exercises_media
    depends_on:
      init-logs:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  bot:
    build: .
    container_name: spina_bot
    command: python -m telegram_bot
    restart: always
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./media:/app/backend/static/exercises_media
    depends_on:
      init-logs:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: spina_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - api

  certbot:
    image: certbot/certbot
    container_name: spina_certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data: